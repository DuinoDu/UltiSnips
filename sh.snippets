# readfile
snippet isvar
if [ ! -n "\$1" ];then
    echo "${1:Message to print.}"
    exit 1
fi
endsnippet

snippet isvars
if [ ! -n "\$1" ] || [ ! -n "\$2" ];then
    echo "${1:Message to print.}"
    exit 1
fi
endsnippet


snippet isdir
if [ ! -d ${1} ];then
	mkdir -p $1
fi
endsnippet


snippet fordir
for f in ${1:`ls *.zip`};do
	${2:unzip $f}
done
endsnippet


snippet log
LOG_DIR=${1:.}
LOG_File=${2:prefix}_\`date +%Y-%m-%d_%H:%M:%S\`.log
exec > >(tee -i $LOG_DIR/$LOG_File)
exec 2>&1
endsnippet


snippet iscmd 
if hash ${1:command} 2>/dev/null;then
    echo "Find $1 : "`which $1`
else
    echo '$1 not found, please install $1 first.'
    exit
fi
endsnippet

snippet iscmd 
type ${1:command} > /dev/null 2>&1 || echo >&2 "$1 not exists"
endsnippet

snippet foreach
arr=(1 2 3)
for item in ${arr[@]};do
	echo $item
done
endsnippet

snippet ask
read -p "${1:question}? [y/n]" answer
if [[ $answer = "y"   ]]; then
	${2:do something}
else
	exit
fi
endsnippet

snippet sed
sed -i -e "s/${1:old}/${2:new}/g" ${3:file}
endsnippet

snippet tool
function usage() {
    echo "usage:"
    echo "`!p snip.rv=fn` ${2:[-a]}"
}

while getopts "a:h:" arg
do
    case $arg in 
        a)
            a_value=${OPTARG}
            ;;
        h)
            usage
            exit
            ;;
        ?)
            usage
            exit 1
            ;;
    esac
done
endsnippet

snippet pyversion
py_ver=\`python -c 'import sys; print(sys.version_info[:][0])'\`
if [[ $py_ver == '2' ]]; then
    echo "current using python2"
endsnippet

snippet ismac
if [ `uname -s` = 'Darwin' ]; then
    echo 'mac'
	$1
fi
endsnippet

snippet timestamp
date +%Y%m%d_%H%M%S
endsnippet

snippet ifeq
if [ "$1"x = "$2"x ];then
	$3
fi
endsnippet

snippet ifin
if [[ ${1:father} == *"${2:son}"*  ]]; then
	$3
fi
endsnippet
