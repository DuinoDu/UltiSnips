snippet tool
#!/usr/bin/env python
# -*- coding: utf-8 -*-

'''
python ${1:yourFunction}.py ${2:args}
'''
import os, sys

def $1(argv):
	${3:pass}

def main():
    import sys
	if len(sys.argv) != 2:
		print(__doc__)
		return
    $1(sys.argv)

if __name__ == "__main__":
	main()
endsnippet

snippet isdir
if not os.path.exists(${1:dirname}):
    os.makedirs($1)
endsnippet

snippet sh
(status, output) = commands.getstatusoutput('$1')
output = output.split('\n')
endsnippet

snippet printi
    sys.stdout.flush()
    sys.stdout.write('writing {}/{}\r'.format(i, len(files)))
    i += 1 # set i = 0 before looping
print '\nFinish!'
endsnippet


snippet camera
cap = cv2.VideoCapture(0)
while True:
    ok, f = cap.read()
    if ok:    
        cv2.imshow("image", f)
    if cv2.waitKey(20) == 27:
        break
cv2.destroyAllWindows()
endsnippet


# mxnet
snippet conv
conv${1:1} = mx.symbol.Convolution(
    data=${2}, num_filter=${3:96}, kernel=(${4:7}, $4), pad=(${5:3},$5), stride=(${6:2}, $6))
relu$1 = mx.symbol.Activation(data=conv$1, act_type="relu")
endsnippet
snippet pool
pool${1:1} = mx.symbol.Pooling(data=${2}, pool_type="max", kernel=(${3:3}, $3), stride=(${4:2},$4))
endsnippet
snippet lrn
lrn${1:1} = mx.symbol.LRN(data=${2}, nsize=3, alpha=0.0005, beta=0.75, knorm=1)
endsnippet

